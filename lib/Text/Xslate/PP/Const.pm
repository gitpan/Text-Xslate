# This lines are automatically generated by tool/opcode_for_pp.pl.
# ANY CHANGES WILL BE LOST!
package Text::Xslate::PP::Const;

package Text::Xslate::PP;

use strict;

use constant TXARGf_SV      => 0x01;
use constant TXARGf_INT     => 0x02;
use constant TXARGf_KEY     => 0x04;
use constant TXARGf_VAR     => 0x08;
use constant TXARGf_GOTO    => 0x10;

use constant TXCODE_W_SV    => TXARGf_SV;
use constant TXCODE_W_INT   => (TXARGf_SV | TXARGf_INT);
use constant TXCODE_W_VAR   => (TXARGf_SV | TXARGf_INT | TXARGf_VAR);
use constant TXCODE_W_KEY   => (TXARGf_SV | TXARGf_KEY);
use constant TXCODE_GOTO    => (TXARGf_SV | TXARGf_INT | TXARGf_GOTO);

# template representation, stored in $self->{template}{$file}
use constant TXo_NAME           => 0;
use constant TXo_ERROR_HANDLER  => 1;
use constant TXo_MTIME          => 2;
use constant TXo_CACHEPATH      => 3;
use constant TXo_FULLPATH       => 4;

# vm execution frame
use constant TXframe_NAME       => 0;
use constant TXframe_OUTPUT     => 1;
use constant TXframe_RETADDR    => 2;
use constant TXframe_START_LVAR => 3;

use constant TX_VERBOSE_DEFAULT => 1;


our %OPS = (
    noop             => 0,
    move_to_sb       => 1,
    move_from_sb     => 2,
    save_to_lvar     => 3,
    load_lvar_to_sb  => 4,
    local_s          => 5,
    push             => 6,
    pushmark         => 7,
    nil              => 8,
    literal          => 9,
    literal_i        => 10,
    fetch_s          => 11,
    fetch_lvar       => 12,
    fetch_field      => 13,
    fetch_field_s    => 14,
    print            => 15,
    print_raw        => 16,
    print_raw_s      => 17,
    include          => 18,
    for_start        => 19,
    for_iter         => 20,
    add              => 21,
    sub              => 22,
    mul              => 23,
    div              => 24,
    mod              => 25,
    concat           => 26,
    and              => 27,
    dand             => 28,
    or               => 29,
    dor              => 30,
    not              => 31,
    minus            => 32,
    size             => 33,
    eq               => 34,
    ne               => 35,
    lt               => 36,
    le               => 37,
    gt               => 38,
    ge               => 39,
    macrocall        => 40,
    macro_begin      => 41,
    macro_end        => 42,
    macro            => 43,
    function         => 44,
    funcall          => 45,
    methodcall_s     => 46,
    make_array       => 47,
    make_hash        => 48,
    enter            => 49,
    leave            => 50,
    goto             => 51,
    depend           => 52,
    end              => 53,
); # %OPS

our @OPCODE = (
    \&Text::Xslate::PP::Opcode::op_noop,                # 0
    \&Text::Xslate::PP::Opcode::op_move_to_sb,          # 1
    \&Text::Xslate::PP::Opcode::op_move_from_sb,        # 2
    \&Text::Xslate::PP::Opcode::op_save_to_lvar,        # 3
    \&Text::Xslate::PP::Opcode::op_load_lvar_to_sb,     # 4
    \&Text::Xslate::PP::Opcode::op_local_s,             # 5
    \&Text::Xslate::PP::Opcode::op_push,                # 6
    \&Text::Xslate::PP::Opcode::op_pushmark,            # 7
    \&Text::Xslate::PP::Opcode::op_nil,                 # 8
    \&Text::Xslate::PP::Opcode::op_literal,             # 9
    \&Text::Xslate::PP::Opcode::op_literal_i,           # 10
    \&Text::Xslate::PP::Opcode::op_fetch_s,             # 11
    \&Text::Xslate::PP::Opcode::op_fetch_lvar,          # 12
    \&Text::Xslate::PP::Opcode::op_fetch_field,         # 13
    \&Text::Xslate::PP::Opcode::op_fetch_field_s,       # 14
    \&Text::Xslate::PP::Opcode::op_print,               # 15
    \&Text::Xslate::PP::Opcode::op_print_raw,           # 16
    \&Text::Xslate::PP::Opcode::op_print_raw_s,         # 17
    \&Text::Xslate::PP::Opcode::op_include,             # 18
    \&Text::Xslate::PP::Opcode::op_for_start,           # 19
    \&Text::Xslate::PP::Opcode::op_for_iter,            # 20
    \&Text::Xslate::PP::Opcode::op_add,                 # 21
    \&Text::Xslate::PP::Opcode::op_sub,                 # 22
    \&Text::Xslate::PP::Opcode::op_mul,                 # 23
    \&Text::Xslate::PP::Opcode::op_div,                 # 24
    \&Text::Xslate::PP::Opcode::op_mod,                 # 25
    \&Text::Xslate::PP::Opcode::op_concat,              # 26
    \&Text::Xslate::PP::Opcode::op_and,                 # 27
    \&Text::Xslate::PP::Opcode::op_dand,                # 28
    \&Text::Xslate::PP::Opcode::op_or,                  # 29
    \&Text::Xslate::PP::Opcode::op_dor,                 # 30
    \&Text::Xslate::PP::Opcode::op_not,                 # 31
    \&Text::Xslate::PP::Opcode::op_minus,               # 32
    \&Text::Xslate::PP::Opcode::op_size,                # 33
    \&Text::Xslate::PP::Opcode::op_eq,                  # 34
    \&Text::Xslate::PP::Opcode::op_ne,                  # 35
    \&Text::Xslate::PP::Opcode::op_lt,                  # 36
    \&Text::Xslate::PP::Opcode::op_le,                  # 37
    \&Text::Xslate::PP::Opcode::op_gt,                  # 38
    \&Text::Xslate::PP::Opcode::op_ge,                  # 39
    \&Text::Xslate::PP::Opcode::op_macrocall,           # 40
    \&Text::Xslate::PP::Opcode::op_macro_begin,         # 41
    \&Text::Xslate::PP::Opcode::op_macro_end,           # 42
    \&Text::Xslate::PP::Opcode::op_macro,               # 43
    \&Text::Xslate::PP::Opcode::op_function,            # 44
    \&Text::Xslate::PP::Opcode::op_funcall,             # 45
    \&Text::Xslate::PP::Opcode::op_methodcall_s,        # 46
    \&Text::Xslate::PP::Opcode::op_make_array,          # 47
    \&Text::Xslate::PP::Opcode::op_make_hash,           # 48
    \&Text::Xslate::PP::Opcode::op_enter,               # 49
    \&Text::Xslate::PP::Opcode::op_leave,               # 50
    \&Text::Xslate::PP::Opcode::op_goto,                # 51
    \&Text::Xslate::PP::Opcode::op_depend,              # 52
    \&Text::Xslate::PP::Opcode::op_end,                 # 53
); # @OPCODE

our @OPARGS = (
    0,             # noop
    0,             # move_to_sb
    0,             # move_from_sb
    TXCODE_W_VAR,  # save_to_lvar
    TXCODE_W_VAR,  # load_lvar_to_sb
    TXCODE_W_KEY,  # local_s
    0,             # push
    0,             # pushmark
    0,             # nil
    TXCODE_W_SV,   # literal
    TXCODE_W_INT,  # literal_i
    TXCODE_W_KEY,  # fetch_s
    TXCODE_W_VAR,  # fetch_lvar
    0,             # fetch_field
    TXCODE_W_KEY,  # fetch_field_s
    0,             # print
    0,             # print_raw
    TXCODE_W_SV,   # print_raw_s
    0,             # include
    TXCODE_W_VAR,  # for_start
    TXCODE_GOTO,   # for_iter
    0,             # add
    0,             # sub
    0,             # mul
    0,             # div
    0,             # mod
    TXCODE_W_SV,   # concat
    TXCODE_GOTO,   # and
    TXCODE_GOTO,   # dand
    TXCODE_GOTO,   # or
    TXCODE_GOTO,   # dor
    0,             # not
    0,             # minus
    0,             # size
    0,             # eq
    0,             # ne
    0,             # lt
    0,             # le
    0,             # gt
    0,             # ge
    TXCODE_W_INT,  # macrocall
    TXCODE_W_KEY,  # macro_begin
    0,             # macro_end
    TXCODE_W_KEY,  # macro
    TXCODE_W_KEY,  # function
    0,             # funcall
    TXCODE_W_KEY,  # methodcall_s
    0,             # make_array
    0,             # make_hash
    0,             # enter
    0,             # leave
    TXCODE_GOTO,   # goto
    TXCODE_W_SV,   # depend
    0,             # end
); # @OPARGS

1;
__END__

=pod

=head1 NAME

Text::Xslate::PP::Const - Text::Xslate constants in pure Perl

=head1 DESCRIPTION

This module is used by Text::Xslate::PP internally.

=head1 SEE ALSO

L<Text::Xslate>

L<Text::Xslate::PP>

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2010 by Makamaka Hannyaharamitu (makamaka).

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

